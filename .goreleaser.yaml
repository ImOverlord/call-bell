# yaml-language-server: $schema=https://goreleaser.com/static/schema.json

version: 2

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

changelog:
  use: github-native

dockers:
  - image_templates:
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:latest-amd64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
    extra_files:
      - views
  - image_templates:
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:{{ .Version }}-arm64"
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:latest-arm64"
    use: buildx
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64"
    extra_files:
      - views

docker_manifests:
  - name_template: "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:{{ .Version }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:{{ .Version }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:{{ .Version }}-arm64"
  - name_template: "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:latest-amd64"
      - "{{ .Env.REGISTRY }}/{{ tolower .Env.IMAGE_NAME }}:latest-arm64"
